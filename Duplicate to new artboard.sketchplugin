// move selection to new artboard (cmd shift a)

var HEIGHT = 5000;
var WIDTH = 5000;

if (selection.count() > 0 && artboardSelectionCount() === 0) {
    var artboard = createNewArtboardFromSelection();
    var layers = artboard.layers();
    var firstLayer = layers.firstObject();
    var cropLayer = {
        top: firstLayer,
        left: firstLayer,
        right: firstLayer,
        bottom: firstLayer
    };

    for (var i = layers.count(); i--;) {
        var currentLayer = layers.objectAtIndex(i);
        var currentLayerFrame = currentLayer.frame();
        var cropLayerFrame = {
            top: cropLayer.top.frame(),
            left: cropLayer.left.frame(),
            right: cropLayer.right.frame(),
            bottom: cropLayer.bottom.frame()
        };

        if (currentLayerFrame.minY() < cropLayerFrame.top.minY()) {
            cropLayer.top = currentLayer;
        }

        if (currentLayerFrame.minX() < cropLayerFrame.left.minX()) {
            cropLayer.left = currentLayer;
        }

        if (currentLayerFrame.maxX() > cropLayerFrame.right.maxX()) {
            cropLayer.right = currentLayer;
        }

        if (currentLayerFrame.maxY() > cropLayerFrame.bottom.maxY()) {
            cropLayer.bottom = currentLayer;
        }
    }

    var frame = artboard.frame();

    frame.setWidth(WIDTH);
    var left = cropLayerFrame.left.minX();
    var right = frame.width() - cropLayerFrame.right.maxX();
    frame.subtractWidth(left);
    frame.subtractWidth(right);

    frame.setHeight(HEIGHT);
    var top = cropLayer.top.frame().minY();
    var bottom = frame.height() - cropLayer.bottom.frame().maxY();
    frame.subtractHeight(top);
    frame.subtractHeight(bottom);

    for (var i = layers.count(); i--;) {
        var currentLayerFrame = layers.objectAtIndex(i).frame();

        currentLayerFrame.subtractY(top);
        currentLayerFrame.subtractX(left);
    }

    artboard.select_byExpandingSelection(true, false);
} else {
    doc.showMessage("Please make right selection with layers. Except artboards.");
}

function createNewArtboardFromSelection() {
    var artboard = MSArtboardGroup.new();
    var artboardFrame = artboard.frame();
    var currentPage = doc.currentPage();
    var artboardCount = currentPage.artboards().count();

    artboardFrame.setWidth(WIDTH);
    artboardFrame.setHeight(HEIGHT);
    artboardFrame.setX(artboardCount ? getMaxArtboardDimension('right') + 20 : 0);
    artboardFrame.setY(artboardCount ? getMaxArtboardDimension('top') : 0);

    currentPage.addLayers(NSArray.arrayWithObjects(artboard));
    for (var i = selection.count(); i--;) {
        var selectedItemCopy = selection[i].duplicate();
        artboard.addLayers(NSArray.arrayWithObjects(selectedItemCopy));

        var parentGroup = selection[i].parentGroup();
        parentGroup.removeLayer(selectedItemCopy);
    }

    return artboard;
}

function artboardSelectionCount() {
    var artboardCount = 0;
    for (var i = selection.count(); i--;) {
        if (selection[i].className() == "MSArtboardGroup") {
            artboardCount++;
        }
    }
    return artboardCount;
}

function getMaxArtboardDimension(type) {
    type = type || "top";

    var artboards = doc.currentPage().artboards();
    var firstArtboard = artboards[0];
    var loop = artboards.objectEnumerator();

    var dimension = getDimension(firstArtboard, type);

    while (artboard = loop.nextObject()) {
        var currentDimension = getDimension(artboard, type);

        if ((type === "top" && currentDimension <= dimension) ||
            (type !== "top" && currentDimension >= dimension)) {
            dimension = currentDimension;
        }
    }
    return dimension;
}

function getDimension(artboard, type) {
    return type === "top" ?
        artboard.absoluteRect().minY() :
        artboard.absoluteRect().maxX();
}
